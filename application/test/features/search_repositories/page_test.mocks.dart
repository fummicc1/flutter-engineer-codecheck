// Mocks generated by Mockito 5.4.4 from annotations
// in application/test/features/search_repositories/page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:application/models/repository.model.dart' as _i4;
import 'package:application/network/github_repository_search.request.dart'
    as _i5;
import 'package:application/services/repository.service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [RepositoryService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepositoryService extends _i1.Mock implements _i2.RepositoryService {
  @override
  _i3.Future<List<_i4.Repository>>
      getRepositories<R extends _i5.GetGitHubRepositorySearchRequest>(
              {required String? query}) =>
          (super.noSuchMethod(
            Invocation.method(
              #getRepositories,
              [],
              {#query: query},
            ),
            returnValue:
                _i3.Future<List<_i4.Repository>>.value(<_i4.Repository>[]),
            returnValueForMissingStub:
                _i3.Future<List<_i4.Repository>>.value(<_i4.Repository>[]),
          ) as _i3.Future<List<_i4.Repository>>);
}
